diff --git a/CMakeLists.txt b/CMakeLists.txt
index b8ff58e73..c2f336980 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -126,9 +126,9 @@ write_basic_package_version_file("${JUCE_BINARY_DIR}/JUCEConfigVersion.cmake"
 set(JUCE_INSTALL_DESTINATION "lib/cmake/JUCE-${JUCE_VERSION}" CACHE STRING
     "The location, relative to the install prefix, where the JUCE config file will be installed")
 
-set(JUCE_MODULE_PATH "include/JUCE-${JUCE_VERSION}/modules")
-set(UTILS_INSTALL_DIR "${JUCE_INSTALL_DESTINATION}")
-set(JUCEAIDE_PATH "${JUCE_TOOL_INSTALL_DIR}/${JUCE_JUCEAIDE_NAME}")
+set(JUCE_MODULE_PATH "include")
+set(UTILS_INSTALL_DIR "share/juce")
+set(JUCEAIDE_PATH "tools/juce/${JUCE_JUCEAIDE_NAME}")
 configure_package_config_file("${JUCE_CMAKE_UTILS_DIR}/JUCEConfig.cmake.in"
     "${JUCE_BINARY_DIR}/JUCEConfig.cmake"
     PATH_VARS UTILS_INSTALL_DIR JUCEAIDE_PATH JUCE_MODULE_PATH
@@ -167,14 +167,14 @@ if(("${CMAKE_SOURCE_DIR}" STREQUAL "${JUCE_SOURCE_DIR}") AND (NOT JUCE_BUILD_HEL
     _juce_add_lv2_manifest_helper_target()
 
     if(TARGET juce_lv2_helper)
-        install(TARGETS juce_lv2_helper EXPORT LV2_HELPER DESTINATION "bin/JUCE-${JUCE_VERSION}")
+        install(TARGETS juce_lv2_helper EXPORT LV2_HELPER DESTINATION "bin")
         install(EXPORT LV2_HELPER NAMESPACE juce:: DESTINATION "${JUCE_INSTALL_DESTINATION}")
     endif()
 
     _juce_add_vst3_manifest_helper_target()
 
     if(TARGET juce_vst3_helper)
-        install(TARGETS juce_vst3_helper EXPORT VST3_HELPER DESTINATION "bin/JUCE-${JUCE_VERSION}")
+        install(TARGETS juce_vst3_helper EXPORT VST3_HELPER DESTINATION "bin")
         install(EXPORT VST3_HELPER NAMESPACE juce:: DESTINATION "${JUCE_INSTALL_DESTINATION}")
     endif()
 endif()
diff --git a/extras/Build/CMake/JUCEUtils.cmake b/extras/Build/CMake/JUCEUtils.cmake
index 9eaacd22b..8a71d7d6a 100644
--- a/extras/Build/CMake/JUCEUtils.cmake
+++ b/extras/Build/CMake/JUCEUtils.cmake
@@ -591,7 +591,7 @@ function(_juce_generate_icon source_target dest_target)
         # To get compiled properly, we need the icon before the plist is generated!
         _juce_execute_juceaide(macicon "${generated_icon}" ${icon_args})
         set_source_files_properties(${generated_icon} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)
-    elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows")
+    elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows" AND NOT CMAKE_SYSTEM_PROCESSOR STREQUAL "ARM64")
         if(NOT icon_args)
             return()
         endif()
